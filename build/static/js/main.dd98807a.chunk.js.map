{"version":3,"sources":["components/Header/LogoUser/UserInfo/user-default.svg","components/Header/LogoUser/logo.svg","redux/app-reducer.js","api/api.js","redux/user-reducer.js","redux/store.js","components/Header/LogoUser/UserInfo/UserInfo.jsx","components/Header/LogoUser/LogoUser.jsx","components/Header/Header.jsx","components/Shared/Layout.jsx","components/Content/Routes/LinePage.jsx","components/Content/Routes/CasinoPage.jsx","components/Header/Nav/Nav.jsx","components/Content/Routes/MainPage.jsx","components/Content/Routes/LivePage/GameInfo/GameInfo.jsx","components/Content/Routes/LivePage/Statistic/Indicators/Indicators.jsx","components/Content/Routes/LivePage/Statistic/Statistic.jsx","components/Content/Routes/LivePage/LivePageContainer.jsx","hash/sha256.js","components/Content/Routes/LivePage/LivePage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","initialized","UserAPI","userId","hash","axios","withCredentials","balance","setBalance","type","payload","reducers","combineReducers","app","state","action","userPage","store","createStore","applyMiddleware","thunkMiddleware","window","UserInfo","className","src","userDefault","height","alt","LogoUser","props","logo","width","Header","Layout","children","LinePage","CasinoPage","Nav","to","MainPage","GameInfo","Indicators","Statistic","compose","withRouter","connect","getBalanceUser","dispatch","sha256","ascii","rightRotate","value","amount","i","j","mathPow","Math","pow","maxWord","result","words","asciiBitLength","h","k","primeCounter","isComposite","candidate","charCodeAt","w","slice","oldHash","w15","w2","a","e","temp1","concat","b","toString","getHashSha256","then","response","useState","setWidth","useEffect","match","params","user_id","innerWidth","addEventListener","console","log","match_id","sport_id","lng","frameBorder","App","exact","path","process","render","LivePageContainer","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,kC,o9BCA3C,IAEIC,EAAe,CACfC,aAAY,G,QCIHC,EAAU,SACRC,EAAQC,GAEf,OAAOC,MAAA,4DAA+DF,EAA/D,iBAA8EC,GAAO,CAACE,iBAAgB,K,mjBCPrH,IAEIN,EAAe,CACfO,QAAQ,MAsBDC,EAAa,SAACD,GAAD,MAAa,CAACE,KAzBb,mBAyBoCC,QAASH,ICrBlEI,EAAWC,YAAgB,CAC3BC,IHFsB,WAAmC,IAAlCC,EAAiC,uDAAzBd,EAAae,EAAY,uCACxD,OAAOA,EAAON,MACV,IARe,iBASX,OAAO,EAAP,GACOK,EADP,CAEIb,aAAa,IAErB,QAAS,OAAOa,IGJpBE,SDAuB,WAAmC,IAAlCF,EAAiC,uDAAzBd,EAAae,EAAY,uCACzD,OAAOA,EAAON,MACV,IARiB,mBASb,OAAO,KACAK,EADP,CAEIP,QAASQ,EAAOL,UAExB,QAAS,OAAOI,MCJpBG,EAAQC,YAAYP,EAASQ,YAAgBC,MAEjDC,OAAOJ,MAAQA,EAEAA,Q,qCCZFK,EAAW,SAAC,GAAe,IAAdf,EAAa,EAAbA,QAEtB,OAAQ,oCACJ,yBAAKgB,UAAU,cACX,qEACA,6BAAMhB,GAAW,IAErB,yBAAKgB,UAAU,eACX,yBAAKC,IAAKC,IAAaC,OAAO,KAAKC,IAAI,Y,iBCPtCC,G,MAAW,SAACC,GACrB,OAAQ,yBAAKN,UAAU,iBACnB,yBAAKA,UAAU,eACX,yBAAKC,IAAKM,IAAMH,IAAI,OAAOI,MAAM,QAErC,yBAAKR,UAAU,6BACX,kBAAC,EAAaM,OCPbG,G,MAAS,SAACH,GACnB,OAAO,gCACH,yBAAKN,UAAU,qBACX,yBAAKA,UAAU,oBACX,kBAAC,EAAaM,QCFjBI,G,YAAS,SAACJ,GACnB,OACI,yBAAKN,UAAU,WACX,kBAAC,EAAD,MACCM,EAAMK,YCRNC,EAAW,WACpB,OAAO,8BACH,uCCFKC,EAAa,WACtB,OAAO,8BACH,yCCAKC,G,MAAM,WACf,OAAO,6BACH,6BACI,kBAAC,IAAD,CAASC,GAAI,KAAb,8CACA,kBAAC,IAAD,CAASA,GAAI,SAAb,QACA,kBAAC,IAAD,CAASA,GAAI,SAAb,kCACA,kBAAC,IAAD,CAASA,GAAI,WAAb,wCACA,6BACI,yBAAKd,IAAI,GAAGG,IAAI,oBCTnBY,EAAW,WACpB,OAAO,8BACH,kBAAC,EAAD,MACA,4C,QCHKC,G,MAAW,WACpB,OAAO,6BAEH,yBAAKjB,UAAU,qDACX,6BACI,4BAAQA,UAAU,eAAlB,6BAEJ,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,eAAf,OACA,yBAAKA,UAAU,cAAf,UAEJ,6BACI,4BAAQA,UAAU,eAAlB,gDAIR,yBAAKA,UAAU,kBACX,6BAAK,yCAAe,sCAApB,KACA,6BAAK,mCAAc,sCACnB,6BAAK,yCAAe,wCAGxB,yBAAKA,UAAU,eACX,yICvBCkB,G,MAAa,WACtB,OAAQ,oCACA,yBAAKlB,UAAU,oBACX,qGACA,yBAAKA,UAAU,aACX,6BAAK,mCAAc,oCACnB,0BAAMA,UAAU,oBAGxB,yBAAKA,UAAU,oBACX,gHACA,yBAAKA,UAAU,qBACX,6BAAK,mCAAc,oCACnB,0BAAMA,UAAU,oBAGxB,yBAAKA,UAAU,oBACX,qGACA,yBAAKA,UAAU,qBACX,6BAAK,mCAAc,oCACnB,0BAAMA,UAAU,oBAGzB,yBAAKA,UAAU,oBACV,0GACA,yBAAKA,UAAU,qBACX,6BAAK,mCAAc,oCACnB,0BAAMA,UAAU,uBC1BvBmB,G,MAAY,WACrB,OAAO,6BACH,yBAAKnB,UAAU,oBAAf,gEACA,kBAAC,EAAD,SCAOoB,G,MAAAA,YACXC,IACAC,YAAQ,KAAK,CAACC,ebYU,SAAC3C,GAAD,OAAY,SAAC4C,GACrC,IAAM3C,EctBiB,SAAS4C,EAAOC,GACvC,SAASC,EAAYC,EAAOC,GACxB,OAAQD,IAAQC,EAAWD,GAAQ,GAAKC,EAyB5C,IAtBA,IAGIC,EAAGC,EAHHC,EAAUC,KAAKC,IACfC,EAAUH,EAAQ,EAAG,IAGrBI,EAAS,GAETC,EAAQ,GACRC,EAAuC,EAAtBZ,EAAK,OAKtB7C,EAAO4C,EAAOc,EAAId,EAAOc,GAAK,GAE9BC,EAAIf,EAAOe,EAAIf,EAAOe,GAAK,GAC3BC,EAAeD,EAAC,OAMhBE,EAAc,GACTC,EAAY,EAAGF,EAAe,GAAIE,IACvC,IAAKD,EAAYC,GAAY,CACzB,IAAKb,EAAI,EAAGA,EAAI,IAAKA,GAAKa,EACtBD,EAAYZ,GAAKa,EAErB9D,EAAK4D,GAAiBT,EAAQW,EAAW,IAAIR,EAAS,EACtDK,EAAEC,KAAmBT,EAAQW,EAAW,EAAE,GAAGR,EAAS,EAK9D,IADAT,GAAS,OACFA,EAAK,OAAiB,GAAK,IAAIA,GAAS,KAC/C,IAAKI,EAAI,EAAGA,EAAIJ,EAAK,OAAkBI,IAAK,CAExC,IADAC,EAAIL,EAAMkB,WAAWd,KACd,EAAG,OACVO,EAAMP,GAAG,IAAMC,IAAO,EAAID,GAAG,EAAG,EAMpC,IAJAO,EAAMA,EAAK,QAAsBC,EAAeH,EAAS,EACzDE,EAAMA,EAAK,QAAqBC,EAG3BP,EAAI,EAAGA,EAAIM,EAAK,QAAmB,CACpC,IAAIQ,EAAIR,EAAMS,MAAMf,EAAGA,GAAK,IACxBgB,EAAUlE,EAKd,IAFAA,EAAOA,EAAKiE,MAAM,EAAG,GAEhBhB,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACrB,IAGIkB,EAAMH,EAAEf,EAAI,IAAKmB,EAAKJ,EAAEf,EAAI,GAG5BoB,EAAIrE,EAAK,GAAIsE,EAAItE,EAAK,GACtBuE,EAAQvE,EAAK,IACV8C,EAAYwB,EAAG,GAAKxB,EAAYwB,EAAG,IAAMxB,EAAYwB,EAAG,MACvDA,EAAEtE,EAAK,IAAOsE,EAAGtE,EAAK,IACxB2D,EAAEV,IAEDe,EAAEf,GAAMA,EAAI,GAAMe,EAAEf,GACfe,EAAEf,EAAI,KACHH,EAAYqB,EAAK,GAAKrB,EAAYqB,EAAK,IAAOA,IAAM,GACrDH,EAAEf,EAAI,IACLH,EAAYsB,EAAI,IAAMtB,EAAYsB,EAAI,IAAOA,IAAK,IACvD,IAMVpE,EAAO,CAAEuE,IAHIzB,EAAYuB,EAAG,GAAKvB,EAAYuB,EAAG,IAAMvB,EAAYuB,EAAG,MAC7DA,EAAErE,EAAK,GAAKqE,EAAErE,EAAK,GAAKA,EAAK,GAAGA,EAAK,KAErB,GAAGwE,OAAOxE,IAC7B,GAAMA,EAAK,GAAKuE,EAAO,EAGhC,IAAKtB,EAAI,EAAGA,EAAI,EAAGA,IACfjD,EAAKiD,GAAMjD,EAAKiD,GAAKiB,EAAQjB,GAAI,EAIzC,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IACf,IAAKC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACpB,IAAIuB,EAAKzE,EAAKiD,IAAO,EAAFC,EAAM,IACzBK,IAAYkB,EAAI,GAAM,EAAI,IAAMA,EAAEC,SAAS,IAGnD,OAAOnB,EdxEMoB,CAAc,oBAC3B7E,EAAmBC,EAAOC,GAAM4E,KAAK,SAAAC,GACjClC,EAASvC,EAAWyE,UajBbtC,CEAS,SAACd,GAAW,IAAD,EACNqD,mBAAS,KADH,mBACxBnD,EADwB,KAClBoD,EADkB,KAG/BC,oBAAU,WACNvD,EAAMiB,eAAejB,EAAMwD,MAAMC,OAAOC,SAAW,WAEnDlE,OAAOmE,WAAa,IAAKL,EAAS,KAAOA,EAAS9D,OAAOmE,YAEzDnE,OAAOoE,iBAAiB,SAAS,WAAQpE,OAAOmE,WAAa,IAAML,EAAS,KAAOA,EAAS9D,OAAOmE,eACrG,IAMF,OAFAE,QAAQC,IAAI9D,EAAMwD,MAAMC,QAEjB,8BACH,yBAAK/D,UAAU,qBACX,4BAAQC,IANJ,sCAMa,IAAD,OAAKK,EAAMwD,MAAMC,OAAOM,UAAY,UAApC,qBAA0D/D,EAAMwD,MAAMC,OAAOO,UAAY,MAAzF,gBAAsGhE,EAAMwD,MAAMC,OAAOQ,KAAO,KAAhI,kBAA8I/D,GACtJgE,YAAY,IAAIhE,MAAM,OAAOL,OAAQK,EAAQ,SAErD,kBAAC,EAAD,MACA,kBAAC,EAAD,WCAGiE,EAfH,WACV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAU/E,MAAOA,GACb,kBAAC,EAAD,KACI,kBAAC,IAAD,CAAOgF,OAAK,EAACC,KAAI,UAAKC,aAAL,KAAgCC,OAAQ,kBAAM,kBAAC,EAAD,SAC/D,kBAAC,IAAD,CAAOF,KAAI,UAAKC,aAAL,SAAoCC,OAAQ,kBAAM,kBAACC,EAAD,SAC7D,kBAAC,IAAD,CAAQH,KAAI,UAAKC,aAAL,SAAoCC,OAAQ,kBAAM,kBAAC,EAAD,SAC9D,kBAAC,IAAD,CAAOF,KAAI,UAAKC,aAAL,UAAqCC,OAAQ,kBAAM,kBAAC,EAAD,aCTxDE,QACW,cAA7BjF,OAAOkF,SAASC,UAEe,UAA7BnF,OAAOkF,SAASC,UAEhBnF,OAAOkF,SAASC,SAASnB,MACvB,2DCZNoB,IAASL,OAAO,kBAAC,EAAD,MAASM,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9B,KAAK,SAAA+B,GACjCA,EAAaC,iB","file":"static/js/main.dd98807a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-default.d0338f26.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.efe41bc5.svg\";","const SET_INITIALIZE = \"SET_INITIALIZE\";\r\n\r\nlet initialState = {\r\n    initialized:false\r\n}\r\n\r\nexport const appReducer = (state = initialState,action ) => {\r\n    switch(action.type){\r\n        case SET_INITIALIZE:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport let setInitialize = () =>({type: SET_INITIALIZE});\r\n","import * as axios from \"axios\";\r\n\r\n// const instance = axios.create({\r\n//     withCredentials:true,\r\n//     baseURL:\"\",\r\n// });\r\n\r\nexport const UserAPI = {\r\n    getBalance(userId, hash){\r\n        debugger\r\n        return axios.get(`https://test-22413.herokuapp.com/get_blnc?user_id=${userId}&hash=${hash}`,{withCredentials:true});\r\n    }\r\n}\r\n","import {UserAPI} from \"../api/api\";\r\nimport {getHashSha256} from \"../hash/sha256\";\r\n\r\nconst GET_USER_BALANCE = \"GET_USER_BALANCE\";\r\n\r\nlet initialState = {\r\n    balance:null\r\n}\r\n\r\nexport const userReducer = (state = initialState,action ) => {\r\n    switch(action.type){\r\n        case GET_USER_BALANCE:\r\n            return {\r\n                ...state,\r\n                balance: action.payload,\r\n            };\r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\nexport let getBalanceUser = (userId) => (dispatch) => {\r\n    const hash = getHashSha256(\"187640199:123456\");\r\n    UserAPI.getBalance(userId,hash).then(response => {\r\n        dispatch(setBalance(response));\r\n    })\r\n}\r\n\r\nexport let setBalance = (balance) =>({type: GET_USER_BALANCE,payload: balance});\r\n","import {createStore, combineReducers, applyMiddleware} from \"redux\";\r\n// import {reducer as formReducer} from 'redux-form';\r\n\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {appReducer} from \"./app-reducer\";\r\nimport {userReducer} from \"./user-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    app:appReducer,\r\n    userPage:userReducer\r\n});\r\n\r\nlet store = createStore(reducers,applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport \"./UserInfo.scss\"\r\nimport userDefault from \"./user-default.svg\";\r\n\r\nexport const UserInfo = ({balance}) => {\r\n\r\n    return  <>\r\n        <div className=\"user__data\">\r\n            <div>Баланс</div>\r\n            <div>{balance || 0}</div>\r\n        </div>\r\n        <div className=\"user__white\">\r\n            <img src={userDefault} height=\"40\" alt=\"user\"/>\r\n        </div>\r\n    </>\r\n\r\n}\r\n","import React from 'react';\r\nimport {UserInfo} from \"./UserInfo/UserInfo.jsx\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./LogoUser.scss\"\r\n\r\nexport const LogoUser = (props) => {\r\n    return  <div className=\"user__section\">\r\n        <div className=\"logo__white\">\r\n            <img src={logo} alt=\"LOGO\" width=\"55\"/>\r\n        </div>\r\n        <div className=\"d-flex align-items-center\">\r\n            <UserInfo {...props}/>\r\n        </div>\r\n    </div>\r\n}\r\n","import React from 'react';\r\nimport {LogoUser} from \"./LogoUser/LogoUser.jsx\";\r\nimport \"./Header.scss\";\r\n\r\nexport const Header = (props) => {\r\n    return <header>\r\n        <div className=\"header__container\">\r\n            <div className=\"header__centered\">\r\n                <LogoUser {...props}/>\r\n            </div>\r\n        </div>\r\n    </header>\r\n}\r\n","import React from \"react\"\r\nimport {Header} from \"../Header/Header.jsx\";\r\nimport {Footer} from \"../Footer/Footer.jsx\";\r\nimport \"./Layout.scss\";\r\n\r\n\r\nexport const Layout = (props) => {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <Header/>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const LinePage = () => {\r\n    return <main>\r\n        <div>Line</div>\r\n    </main>\r\n}\r\n","import React from 'react';\r\n\r\nexport const CasinoPage = () => {\r\n    return <main>\r\n        <div>Casino</div>\r\n    </main>\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport \"./nav.scss\";\r\n\r\nexport const Nav = () => {\r\n    return <nav>\r\n        <div>\r\n            <NavLink to={\"/\"}>Главная</NavLink>\r\n            <NavLink to={\"/live\"}>Live</NavLink>\r\n            <NavLink to={\"/line\"}>Линия</NavLink>\r\n            <NavLink to={\"/casino\"}>Казино</NavLink>\r\n            <div>\r\n                <img src=\"\" alt=\"search img\"/>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n}\r\n","import React from 'react';\r\nimport {Nav} from \"../../Header/Nav/Nav.jsx\";\r\n\r\nexport const MainPage = () => {\r\n    return <main>\r\n        <Nav/>\r\n        <div>Main page</div>\r\n    </main>\r\n}\r\n","import React from 'react';\r\nimport \"./GameInfo.scss\";\r\n\r\nexport const GameInfo = () => {\r\n    return <div>\r\n\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div>\r\n                <button className=\"button-grey\">ЦСКА</button>\r\n            </div>\r\n            <div className=\"d-flex flex-column jus\">\r\n                <div className=\"game__score\">1:0</div>\r\n                <div className=\"game__time\">86:56</div>\r\n            </div>\r\n            <div>\r\n                <button className=\"button-grey\">Спартак</button>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"chances__block\">\r\n            <div><span>П1</span><span>1.23</span> </div>\r\n            <div><span>X</span><span>1.2</span></div>\r\n            <div><span>П2</span><span>1.33</span></div>\r\n        </div>\r\n\r\n        <div className=\"btn-default\">\r\n            <button>Поделиться матчем</button>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n","import React from 'react';\r\nimport \"./Indicators.scss\";\r\n\r\nexport const Indicators = () => {\r\n    return  <>\r\n            <div className=\"indicator__block\">\r\n                <div>Удары в створ</div>\r\n                <div className=\"indicator\">\r\n                    <div><span>1</span><span>1</span></div>\r\n                    <span className=\"white__filler\"></span>\r\n                </div>\r\n            </div>\r\n            <div className=\"indicator__block\">\r\n                <div>Владение мячом</div>\r\n                <div className=\"indicator reverse\">\r\n                    <div><span>1</span><span>1</span></div>\r\n                    <span className=\"white__filler\"></span>\r\n                </div>\r\n            </div>\r\n            <div className=\"indicator__block\">\r\n                <div>Удары в створ</div>\r\n                <div className=\"indicator reverse\">\r\n                    <div><span>1</span><span>1</span></div>\r\n                    <span className=\"white__filler\"></span>\r\n                </div>\r\n            </div>\r\n           <div className=\"indicator__block\">\r\n                <div>Угловые удары</div>\r\n                <div className=\"indicator reverse\">\r\n                    <div><span>1</span><span>1</span></div>\r\n                    <span className=\"white__filler\"></span>\r\n                </div>\r\n            </div>\r\n        </>\r\n}\r\n\r\n","import React from 'react';\r\nimport {Indicators} from \"./Indicators/Indicators.jsx\";\r\nimport \"./Statistic.scss\";\r\n\r\nexport const Statistic = () => {\r\n    return <div>\r\n        <div className=\"statistic__title\">Статистика</div>\r\n        <Indicators/>\r\n    </div>\r\n}\r\n","import {LivePage} from \"./LivePage.jsx\";\r\nimport {withRouter} from \"react-router\";\r\nimport {compose} from \"redux\";\r\nimport {getBalanceUser} from \"../../../../redux/user-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(null,{getBalanceUser})\r\n)(LivePage);\r\n","export let getHashSha256 = function sha256(ascii) {\r\n    function rightRotate(value, amount) {\r\n        return (value>>>amount) | (value<<(32 - amount));\r\n    };\r\n\r\n    let mathPow = Math.pow;\r\n    let maxWord = mathPow(2, 32);\r\n    let lengthProperty = 'length'\r\n    let i, j; // Used as a counter across the whole file\r\n    let result = ''\r\n\r\n    let words = [];\r\n    let asciiBitLength = ascii[lengthProperty]*8;\r\n\r\n    //* caching results is optional - remove/add slash from front of this line to toggle\r\n    // Initial hash value: first 32 bits of the fractional parts of the square roots of the first 8 primes\r\n    // (we actually calculate the first 64, but extra values are just ignored)\r\n    let hash = sha256.h = sha256.h || [];\r\n    // Round constants: first 32 bits of the fractional parts of the cube roots of the first 64 primes\r\n    let k = sha256.k = sha256.k || [];\r\n    let primeCounter = k[lengthProperty];\r\n    /*/\r\n    let hash = [], k = [];\r\n    let primeCounter = 0;\r\n    //*/\r\n\r\n    let isComposite = {};\r\n    for (let candidate = 2; primeCounter < 64; candidate++) {\r\n        if (!isComposite[candidate]) {\r\n            for (i = 0; i < 313; i += candidate) {\r\n                isComposite[i] = candidate;\r\n            }\r\n            hash[primeCounter] = (mathPow(candidate, .5)*maxWord)|0;\r\n            k[primeCounter++] = (mathPow(candidate, 1/3)*maxWord)|0;\r\n        }\r\n    }\r\n\r\n    ascii += '\\x80' // Append Ƈ' bit (plus zero padding)\r\n    while (ascii[lengthProperty]%64 - 56) ascii += '\\x00' // More zero padding\r\n    for (i = 0; i < ascii[lengthProperty]; i++) {\r\n        j = ascii.charCodeAt(i);\r\n        if (j>>8) return; // ASCII check: only accept characters in range 0-255\r\n        words[i>>2] |= j << ((3 - i)%4)*8;\r\n    }\r\n    words[words[lengthProperty]] = ((asciiBitLength/maxWord)|0);\r\n    words[words[lengthProperty]] = (asciiBitLength)\r\n\r\n    // process each chunk\r\n    for (j = 0; j < words[lengthProperty];) {\r\n        let w = words.slice(j, j += 16); // The message is expanded into 64 words as part of the iteration\r\n        let oldHash = hash;\r\n        // This is now the undefinedworking hash\", often labelled as letiables a...g\r\n        // (we have to truncate as well, otherwise extra entries at the end accumulate\r\n        hash = hash.slice(0, 8);\r\n\r\n        for (i = 0; i < 64; i++) {\r\n            let i2 = i + j;\r\n            // Expand the message into 64 words\r\n            // Used below if \r\n            let w15 = w[i - 15], w2 = w[i - 2];\r\n\r\n            // Iterate\r\n            let a = hash[0], e = hash[4];\r\n            let temp1 = hash[7]\r\n                + (rightRotate(e, 6) ^ rightRotate(e, 11) ^ rightRotate(e, 25)) // S1\r\n                + ((e&hash[5])^((~e)&hash[6])) // ch\r\n                + k[i]\r\n                // Expand the message schedule if needed\r\n                + (w[i] = (i < 16) ? w[i] : (\r\n                        w[i - 16]\r\n                        + (rightRotate(w15, 7) ^ rightRotate(w15, 18) ^ (w15>>>3)) // s0\r\n                        + w[i - 7]\r\n                        + (rightRotate(w2, 17) ^ rightRotate(w2, 19) ^ (w2>>>10)) // s1\r\n                    )|0\r\n                );\r\n            // This is only used once, so *could* be moved below, but it only saves 4 bytes and makes things unreadble\r\n            let temp2 = (rightRotate(a, 2) ^ rightRotate(a, 13) ^ rightRotate(a, 22)) // S0\r\n                + ((a&hash[1])^(a&hash[2])^(hash[1]&hash[2])); // maj\r\n\r\n            hash = [(temp1 + temp2)|0].concat(hash); // We don't bother trimming off the extra ones, they're harmless as long as we're truncating when we do the slice()\r\n            hash[4] = (hash[4] + temp1)|0;\r\n        }\r\n\r\n        for (i = 0; i < 8; i++) {\r\n            hash[i] = (hash[i] + oldHash[i])|0;\r\n        }\r\n    }\r\n\r\n    for (i = 0; i < 8; i++) {\r\n        for (j = 3; j + 1; j--) {\r\n            let b = (hash[i]>>(j*8))&255;\r\n            result += ((b < 16) ? 0 : '') + b.toString(16);\r\n        }\r\n    }\r\n    return result;\r\n};","import React, {useState,useEffect} from 'react';\r\nimport {GameInfo} from \"./GameInfo/GameInfo.jsx\";\r\nimport {Statistic} from \"./Statistic/Statistic.jsx\";\r\nimport \"../Content.scss\";\r\n\r\nimport {getHashSha256} from \"../../../../hash/sha256\";\r\n\r\nexport const LivePage = (props) => {\r\n    const [width,setWidth] = useState(720);\r\n\r\n    useEffect(() => {\r\n        props.getBalanceUser(props.match.params.user_id || 187640199);\r\n\r\n        window.innerWidth > 720? setWidth(720) : setWidth(window.innerWidth);\r\n\r\n        window.addEventListener('resize',() => {(window.innerWidth > 720)? setWidth(720) : setWidth(window.innerWidth);});\r\n    },[])\r\n\r\n    const url = \"https://map-attacks.espnbet.com/?id\";\r\n\r\n    console.log(props.match.params)\r\n\r\n    return <main>\r\n        <div className=\"content__centered\">\r\n            <iframe src={url+`=${props.match.params.match_id || 259655545}&sport_id=${props.match.params.sport_id || 12341}&lng=${props.match.params.lng || \"en\"}&width=${width}`}\r\n                    frameBorder=\"0\" width=\"100%\" height={width / 1.7772}>\r\n            </iframe>\r\n            <GameInfo/>\r\n            <Statistic/>\r\n        </div>\r\n    </main>\r\n}\r\n","import React , { Suspense } from 'react';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport store from \"./redux/store\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/css/App.scss';\n\nimport {Layout} from \"./components/Shared/Layout.jsx\";\nimport {LinePage} from \"./components/Content/Routes/LinePage.jsx\";\nimport {CasinoPage} from \"./components/Content/Routes/CasinoPage.jsx\";\nimport {MainPage} from \"./components/Content/Routes/MainPage.jsx\";\nimport LivePageContainer from \"./components/Content/Routes/LivePage/LivePageContainer.jsx\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n          <Layout>\n              <Route exact path={`${process.env.PUBLIC_URL}/`} render={() => <MainPage/>}/>\n              <Route path={`${process.env.PUBLIC_URL}/live`} render={() => <LivePageContainer/>}/>\n              <Route  path={`${process.env.PUBLIC_URL}/line`} render={() => <LinePage/>}/>\n              <Route path={`${process.env.PUBLIC_URL}casino`} render={() => <CasinoPage/>}/>\n          </Layout>\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}